
AVRASM ver. 2.1.30  C:\Users\luis_\OneDrive\Escritorio\Tec de Monterrey 2\Semestre 4\Diseño de Sistemas en Chip\Practicas\Practica 6. Reloj Digital\RelojDigital\Debug\List\PracticaReloj.asm Thu Apr 29 14:52:19 2021

                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 1.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 1024 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: Off
                 ;Smart register allocation: Off
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0089 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G100:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x3:
00007b 0303
00007c 0203
00007d 0c02
00007e 0800      	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
00007f 0100
000080 0600      	.DB  0x0,0x1,0x0,0x6
                 _0x0:
000081 3025
000082 6932
000083 253a
000084 3230      	.DB  0x25,0x30,0x32,0x69,0x3A,0x25,0x30,0x32
000085 3a69
000086 3025
000087 6932
C:\Users\luis_\OneDrive\Escritorio\Tec de Monterrey 2\Semestre 4\Diseño de Sistemas en Chip\Practicas\Practica 6. Reloj Digital\RelojDigital\Debug\List\PracticaReloj.asm(1172): warning: .cseg .db misalignment - padding zero byte
000088 0000      	.DB  0x69,0x3A,0x25,0x30,0x32,0x69,0x0
                 __RESET:
000089 94f8      	CLI
00008a 27ee      	CLR  R30
00008b bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00008c e0f1      	LDI  R31,1
00008d bff5      	OUT  MCUCR,R31
00008e bfe5      	OUT  MCUCR,R30
00008f 93e0 0074 	STS  XMCRA,R30
000091 93e0 0075 	STS  XMCRB,R30
                 
                 ;CLEAR R2-R14
000093 e08d      	LDI  R24,(14-2)+1
000094 e0a2      	LDI  R26,2
000095 27bb      	CLR  R27
                 __CLEAR_REG:
000096 93ed      	ST   X+,R30
000097 958a      	DEC  R24
000098 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000099 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00009a e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00009b e0a0      	LDI  R26,LOW(__SRAM_START)
00009c e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
00009d 93ed      	ST   X+,R30
00009e 9701      	SBIW R24,1
00009f f7e9      	BRNE __CLEAR_SRAM
                 
0000a0 bf8b      	OUT  RAMPZ,R24
                 
0000a1 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
0000a2 e0e0      	LDI  R30,__GPIOR0_INIT
0000a3 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0000a4 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0000a5 bfed      	OUT  SPL,R30
0000a6 e2e1      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0000a7 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000a8 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0000a9 e0d6      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0000aa 940c 0145 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x600
                 
                 	.CSEG
                 ; /*
                 ;
                 ; */
                 ;
                 ;  #asm
                     .equ __lcd_port=0x02   //LCD en PuertoA
                     .equ __lcd_EN=1
                     .equ __lcd_RS=0
                     .equ __lcd_D4=2
                     .equ __lcd_D5=3
                     .equ __lcd_D6=4
                     .equ __lcd_D7=5
                 ; 0000 000D    #endasm
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <delay.h>
                 ;#include <display.h>
                 
                 	.CSEG
                 _SetupLCD:
                 ; .FSTART _SetupLCD
0000ac 972c      	SBIW R28,12
0000ad e08c      	LDI  R24,12
0000ae e0a0      	LDI  R26,LOW(0)
0000af e0b0      	LDI  R27,HIGH(0)
0000b0 efe6      	LDI  R30,LOW(_0x3*2)
0000b1 e0f0      	LDI  R31,HIGH(_0x3*2)
0000b2 940e 0422 	CALL __INITLOCB
0000b4 930a      	ST   -Y,R16
                 ;	TableSetup -> Y+1
                 ;	i -> R16
                 ; 0000 0011     SBI __lcd_port-1,__lcd_EN
0000b5 9a09          SBI __lcd_port-1,__lcd_EN
0000b6 9a08          SBI __lcd_port-1,__lcd_RS
0000b7 9a0a          SBI __lcd_port-1,__lcd_D4
0000b8 9a0b          SBI __lcd_port-1,__lcd_D5
0000b9 9a0c          SBI __lcd_port-1,__lcd_D6
0000ba 9a0d          SBI __lcd_port-1,__lcd_D7
0000bb e3a2      	LDI  R26,LOW(50)
0000bc e0b0      	LDI  R27,0
0000bd 940e 03ef 	CALL _delay_ms
0000bf e000      	LDI  R16,LOW(0)
                 _0x5:
0000c0 300c      	CPI  R16,12
0000c1 f468      	BRSH _0x6
0000c2 940e 03a8 	CALL SUBOPT_0x0
0000c4 2fe0      	MOV  R30,R16
0000c5 e0f0      	LDI  R31,0
0000c6 01de      	MOVW R26,R28
0000c7 9611      	ADIW R26,1
0000c8 0fae      	ADD  R26,R30
0000c9 1fbf      	ADC  R27,R31
0000ca 91ac      	LD   R26,X
0000cb 940e 03ac 	CALL SUBOPT_0x1
0000cd 5f0f      	SUBI R16,-1
0000ce cff1      	RJMP _0x5
                 _0x6:
0000cf e0ec      	LDI  R30,LOW(12)
0000d0 93e0 0600 	STS  _cursor,R30
0000d2 91a0 0600 	LDS  R26,_cursor
0000d4 d021      	RCALL _WriteComandLCD
0000d5 8108      	LDD  R16,Y+0
0000d6 962d      	ADIW R28,13
0000d7 9508      	RET
                 ; .FEND
                 _PulseEn:
                 ; .FSTART _PulseEn
0000d8 9a11          SBI __lcd_port,__lcd_EN  // EN=1;
0000d9 9811          CBI __lcd_port,__lcd_EN // EN=0;
0000da 9508      	RET
                 ; .FEND
                 _SendDataBitsLCD:
                 ; .FSTART _SendDataBitsLCD
0000db 93aa      	ST   -Y,R26
                 ;	dato -> Y+0
0000dc 81e8      	LD   R30,Y
0000dd 70e8      	ANDI R30,LOW(0x8)
0000de f011      	BREQ _0x7
0000df 9a15      	SBI __lcd_port,__lcd_D7
0000e0 c001      	RJMP _0x8
                 _0x7:
0000e1 9815      	CBI __lcd_port,__lcd_D7
                 _0x8:
0000e2 81e8      	LD   R30,Y
0000e3 70e4      	ANDI R30,LOW(0x4)
0000e4 f011      	BREQ _0x9
0000e5 9a14      	SBI __lcd_port,__lcd_D6
0000e6 c001      	RJMP _0xA
                 _0x9:
0000e7 9814      	CBI __lcd_port,__lcd_D6
                 _0xA:
0000e8 81e8      	LD   R30,Y
0000e9 70e2      	ANDI R30,LOW(0x2)
0000ea f011      	BREQ _0xB
0000eb 9a13      	SBI __lcd_port,__lcd_D5
0000ec c001      	RJMP _0xC
                 _0xB:
0000ed 9813      	CBI __lcd_port,__lcd_D5
                 _0xC:
0000ee 81e8      	LD   R30,Y
0000ef 70e1      	ANDI R30,LOW(0x1)
0000f0 f011      	BREQ _0xD
0000f1 9a12      	SBI __lcd_port,__lcd_D4
0000f2 c001      	RJMP _0xE
                 _0xD:
0000f3 9812      	CBI __lcd_port,__lcd_D4
                 _0xE:
0000f4 9621      	ADIW R28,1
0000f5 9508      	RET
                 ; .FEND
                 _WriteComandLCD:
                 ; .FSTART _WriteComandLCD
0000f6 93aa      	ST   -Y,R26
0000f7 930a      	ST   -Y,R16
                 ;	Comando -> Y+1
                 ;	tempComando -> R16
0000f8 9810      	CBI __lcd_port,__lcd_RS
0000f9 940e 03a8 	CALL SUBOPT_0x0
0000fb 940e 03b0 	CALL SUBOPT_0x2
0000fd 940e 03b7 	CALL SUBOPT_0x3
0000ff dfd8      	RCALL _PulseEn
000100 8108      	LDD  R16,Y+0
000101 c041      	RJMP _0x2060002
                 ; .FEND
                 _CharLCD:
                 ; .FSTART _CharLCD
000102 93aa      	ST   -Y,R26
000103 930a      	ST   -Y,R16
                 ;	dato -> Y+1
                 ;	tempdato -> R16
000104 9a10      	SBI __lcd_port,__lcd_RS
000105 940e 03a8 	CALL SUBOPT_0x0
000107 940e 03b0 	CALL SUBOPT_0x2
000109 940e 03b7 	CALL SUBOPT_0x3
00010b dfcc      	RCALL _PulseEn
00010c 8108      	LDD  R16,Y+0
00010d c035      	RJMP _0x2060002
                 ; .FEND
                 ;	i -> R16
                 ;	tiempo -> Y+1
                 ;	i -> R16
                 _StringLCDVar:
                 ; .FSTART _StringLCDVar
00010e 93ba      	ST   -Y,R27
00010f 93aa      	ST   -Y,R26
000110 930a      	ST   -Y,R16
                 ;	Mensaje -> Y+1
                 ;	i -> R16
000111 e000      	LDI  R16,LOW(0)
                 _0x16:
000112 2fe0      	MOV  R30,R16
000113 5f0f      	SUBI R16,-1
000114 81a9      	LDD  R26,Y+1
000115 81ba      	LDD  R27,Y+1+1
000116 e0f0      	LDI  R31,0
000117 0fae      	ADD  R26,R30
000118 1fbf      	ADC  R27,R31
000119 91ac      	LD   R26,X
00011a dfe7      	RCALL _CharLCD
00011b 81a9      	LDD  R26,Y+1
00011c 81ba      	LDD  R27,Y+1+1
00011d 27ee      	CLR  R30
00011e 0fa0      	ADD  R26,R16
00011f 1fbe      	ADC  R27,R30
000120 91ec      	LD   R30,X
000121 30e0      	CPI  R30,0
000122 f779      	BRNE _0x16
000123 8108      	LDD  R16,Y+0
000124 9623      	ADIW R28,3
000125 9508      	RET
                 ; .FEND
                 _MoveCursor:
                 ; .FSTART _MoveCursor
000126 93aa      	ST   -Y,R26
                 ;	x -> Y+1
                 ;	y -> Y+0
000127 81e8      	LD   R30,Y
000128 e0f0      	LDI  R31,0
000129 9730      	SBIW R30,0
00012a f419      	BRNE _0x1B
00012b 81a9      	LDD  R26,Y+1
00012c 58a0      	SUBI R26,-LOW(128)
00012d c014      	RJMP _0x3C
                 _0x1B:
00012e 30e1      	CPI  R30,LOW(0x1)
00012f e0a0      	LDI  R26,HIGH(0x1)
000130 07fa      	CPC  R31,R26
000131 f419      	BRNE _0x1C
000132 81a9      	LDD  R26,Y+1
000133 54a0      	SUBI R26,-LOW(192)
000134 c00d      	RJMP _0x3C
                 _0x1C:
000135 30e2      	CPI  R30,LOW(0x2)
000136 e0a0      	LDI  R26,HIGH(0x2)
000137 07fa      	CPC  R31,R26
000138 f419      	BRNE _0x1D
000139 81a9      	LDD  R26,Y+1
00013a 56ac      	SUBI R26,-LOW(148)
00013b c006      	RJMP _0x3C
                 _0x1D:
00013c 30e3      	CPI  R30,LOW(0x3)
00013d e0a0      	LDI  R26,HIGH(0x3)
00013e 07fa      	CPC  R31,R26
00013f f419      	BRNE _0x1A
000140 81a9      	LDD  R26,Y+1
000141 52ac      	SUBI R26,-LOW(212)
                 _0x3C:
000142 dfb3      	RCALL _WriteComandLCD
                 _0x1A:
                 _0x2060002:
000143 9622      	ADIW R28,2
000144 9508      	RET
                 ; .FEND
                 ;	NoCaracter -> Y+3
                 ;	datos -> Y+1
                 ;	i -> R16
                 ;#include <stdio.h>
                 ;
                 ;
                 ;unsigned char i=0;
                 ;signed char H=0,M=0,S=0;
                 ;char Hora[8];
                 ;
                 ;
                 ;void main(void)
                 ; 0000 001B {
                 _main:
                 ; .FSTART _main
                 ; 0000 001C     CLKPR=0x80;
000145 e8e0      	LDI  R30,LOW(128)
000146 93e0 0061 	STS  97,R30
                 ; 0000 001D     CLKPR=0x04;
000148 e0e4      	LDI  R30,LOW(4)
000149 93e0 0061 	STS  97,R30
                 ; 0000 001E 
                 ; 0000 001F     PORTC = 0x1F;  // PC4, PC3, PC2, PC1, PC0 con Pull-UP
00014b e1ef      	LDI  R30,LOW(31)
00014c b9e8      	OUT  0x8,R30
                 ; 0000 0020 
                 ; 0000 0021 
                 ; 0000 0022 
                 ; 0000 0023     SetupLCD();
00014d 940e 00ac 	CALL _SetupLCD
                 ; 0000 0024 
                 ; 0000 0025     TCCR1A=0;
00014f e0e0      	LDI  R30,LOW(0)
000150 93e0 0080 	STS  128,R30
                 ; 0000 0026     TCCR1B=0x0A;    //Timer 1 en CTC con CK/8
000152 e0ea      	LDI  R30,LOW(10)
000153 93e0 0081 	STS  129,R30
                 ; 0000 0027     OCR1AH=31249/256;
000155 e7ea      	LDI  R30,LOW(122)
000156 93e0 0089 	STS  137,R30
                 ; 0000 0028     OCR1AL=31249%256;
000158 e1e1      	LDI  R30,LOW(17)
000159 93e0 0088 	STS  136,R30
                 ; 0000 0029 
                 ; 0000 002A     while (1)      // El ciclo completo tarda 0.25seg
                 _0x22:
                 ; 0000 002B     {
                 ; 0000 002C        //Imprimir hora en el LCD
                 ; 0000 002D        sprintf(Hora, "%02i:%02i:%02i",H,M,S);
00015b e0e5      	LDI  R30,LOW(_Hora)
00015c e0f6      	LDI  R31,HIGH(_Hora)
00015d 93fa      	ST   -Y,R31
00015e 93ea      	ST   -Y,R30
                +
00015f e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
000160 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
000161 93fa      	ST   -Y,R31
000162 93ea      	ST   -Y,R30
000163 91e0 0602 	LDS  R30,_H
000165 940e 03be 	CALL SUBOPT_0x4
000167 91e0 0603 	LDS  R30,_M
000169 940e 03be 	CALL SUBOPT_0x4
00016b 91e0 0604 	LDS  R30,_S
00016d 940e 03be 	CALL SUBOPT_0x4
00016f e08c      	LDI  R24,12
000170 d1ea      	RCALL _sprintf
000171 9660      	ADIW R28,16
                 ; 0000 002E        MoveCursor(4,0);
000172 e0e4      	LDI  R30,LOW(4)
000173 93ea      	ST   -Y,R30
000174 e0a0      	LDI  R26,LOW(0)
000175 dfb0      	RCALL _MoveCursor
                 ; 0000 002F        StringLCDVar(Hora);
000176 e0a5      	LDI  R26,LOW(_Hora)
000177 e0b6      	LDI  R27,HIGH(_Hora)
000178 df95      	RCALL _StringLCDVar
                 ; 0000 0030 
                 ; 0000 0031 
                 ; 0000 0032        while(TIFR1.OCF1A==0);   //Espera a 0.25seg
                 _0x25:
000179 9bb1      	SBIS 0x16,1
00017a cffe      	RJMP _0x25
                 ; 0000 0033        TIFR1.OCF1A=1;           //Borra Bandera
00017b 9ab1      	SBI  0x16,1
                 ; 0000 0034        i++;
00017c 91e0 0601 	LDS  R30,_i
00017e 5fef      	SUBI R30,-LOW(1)
00017f 93e0 0601 	STS  _i,R30
                 ; 0000 0035 
                 ; 0000 0036        if (i==4)
000181 91a0 0601 	LDS  R26,_i
000183 30a4      	CPI  R26,LOW(0x4)
000184 f539      	BRNE _0x2A
                 ; 0000 0037        {
                 ; 0000 0038             i=0;
000185 e0e0      	LDI  R30,LOW(0)
000186 93e0 0601 	STS  _i,R30
                 ; 0000 0039             S++;
000188 91e0 0604 	LDS  R30,_S
00018a 5fef      	SUBI R30,-LOW(1)
00018b 93e0 0604 	STS  _S,R30
                 ; 0000 003A             if (S==60)
00018d 91a0 0604 	LDS  R26,_S
00018f 33ac      	CPI  R26,LOW(0x3C)
000190 f4d9      	BRNE _0x2B
                 ; 0000 003B             {
                 ; 0000 003C                 S=0;
000191 e0e0      	LDI  R30,LOW(0)
000192 93e0 0604 	STS  _S,R30
                 ; 0000 003D                 M++;
000194 91e0 0603 	LDS  R30,_M
000196 5fef      	SUBI R30,-LOW(1)
000197 93e0 0603 	STS  _M,R30
                 ; 0000 003E                 if (M==60)
000199 91a0 0603 	LDS  R26,_M
00019b 33ac      	CPI  R26,LOW(0x3C)
00019c f479      	BRNE _0x2C
                 ; 0000 003F                 {
                 ; 0000 0040                     M=0;
00019d e0e0      	LDI  R30,LOW(0)
00019e 93e0 0603 	STS  _M,R30
                 ; 0000 0041                     H++;
0001a0 91e0 0602 	LDS  R30,_H
0001a2 5fef      	SUBI R30,-LOW(1)
0001a3 93e0 0602 	STS  _H,R30
                 ; 0000 0042                     if (H==24)
0001a5 91a0 0602 	LDS  R26,_H
0001a7 31a8      	CPI  R26,LOW(0x18)
0001a8 f419      	BRNE _0x2D
                 ; 0000 0043                         H=0;
0001a9 e0e0      	LDI  R30,LOW(0)
0001aa 93e0 0602 	STS  _H,R30
                 ; 0000 0044                 }
                 _0x2D:
                 ; 0000 0045 
                 ; 0000 0046             }
                 _0x2C:
                 ; 0000 0047        }
                 _0x2B:
                 ; 0000 0048        //Revisar switches
                 ; 0000 0049 
                 ; 0000 004A        if(PINC.4 == 0){
                 _0x2A:
0001ac 9934      	SBIC 0x6,4
0001ad c00b      	RJMP _0x2E
                 ; 0000 004B             if(H==23)
0001ae 91a0 0602 	LDS  R26,_H
0001b0 31a7      	CPI  R26,LOW(0x17)
0001b1 f411      	BRNE _0x2F
                 ; 0000 004C                 H=0;
0001b2 e0e0      	LDI  R30,LOW(0)
0001b3 c003      	RJMP _0x3D
                 ; 0000 004D             else
                 _0x2F:
                 ; 0000 004E                 H++;
0001b4 91e0 0602 	LDS  R30,_H
0001b6 5fef      	SUBI R30,-LOW(1)
                 _0x3D:
0001b7 93e0 0602 	STS  _H,R30
                 ; 0000 004F        }
                 ; 0000 0050        if(PINC.3 == 0){
                 _0x2E:
0001b9 9933      	SBIC 0x6,3
0001ba c00b      	RJMP _0x31
                 ; 0000 0051             if(H==0)
0001bb 91e0 0602 	LDS  R30,_H
0001bd 30e0      	CPI  R30,0
0001be f411      	BRNE _0x32
                 ; 0000 0052                 H=23;
0001bf e1e7      	LDI  R30,LOW(23)
0001c0 c003      	RJMP _0x3E
                 ; 0000 0053             else
                 _0x32:
                 ; 0000 0054                 H--;
0001c1 91e0 0602 	LDS  R30,_H
0001c3 50e1      	SUBI R30,LOW(1)
                 _0x3E:
0001c4 93e0 0602 	STS  _H,R30
                 ; 0000 0055        }
                 ; 0000 0056        if(PINC.2 == 0){
                 _0x31:
0001c6 9932      	SBIC 0x6,2
0001c7 c00b      	RJMP _0x34
                 ; 0000 0057             if(M==59)
0001c8 91a0 0603 	LDS  R26,_M
0001ca 33ab      	CPI  R26,LOW(0x3B)
0001cb f411      	BRNE _0x35
                 ; 0000 0058                 M=0;
0001cc e0e0      	LDI  R30,LOW(0)
0001cd c003      	RJMP _0x3F
                 ; 0000 0059             else
                 _0x35:
                 ; 0000 005A                 M++;
0001ce 91e0 0603 	LDS  R30,_M
0001d0 5fef      	SUBI R30,-LOW(1)
                 _0x3F:
0001d1 93e0 0603 	STS  _M,R30
                 ; 0000 005B        }
                 ; 0000 005C        if(PINC.1 == 0){
                 _0x34:
0001d3 9931      	SBIC 0x6,1
0001d4 c00b      	RJMP _0x37
                 ; 0000 005D             if(M==0)
0001d5 91e0 0603 	LDS  R30,_M
0001d7 30e0      	CPI  R30,0
0001d8 f411      	BRNE _0x38
                 ; 0000 005E                 M=59;
0001d9 e3eb      	LDI  R30,LOW(59)
0001da c003      	RJMP _0x40
                 ; 0000 005F             else
                 _0x38:
                 ; 0000 0060                 M--;
0001db 91e0 0603 	LDS  R30,_M
0001dd 50e1      	SUBI R30,LOW(1)
                 _0x40:
0001de 93e0 0603 	STS  _M,R30
                 ; 0000 0061        }
                 ; 0000 0062        if(PINC.0 == 0){
                 _0x37:
0001e0 9930      	SBIC 0x6,0
0001e1 c003      	RJMP _0x3A
                 ; 0000 0063             S=0;
0001e2 e0e0      	LDI  R30,LOW(0)
0001e3 93e0 0604 	STS  _S,R30
                 ; 0000 0064        }
                 ; 0000 0065 
                 ; 0000 0066 
                 ; 0000 0067     }
                 _0x3A:
0001e5 cf75      	RJMP _0x22
                 ; 0000 0068 }
                 _0x3B:
0001e6 cfff      	RJMP _0x3B
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_buff_G100:
                 ; .FSTART _put_buff_G100
0001e7 93ba      	ST   -Y,R27
0001e8 93aa      	ST   -Y,R26
0001e9 931a      	ST   -Y,R17
0001ea 930a      	ST   -Y,R16
0001eb 81aa      	LDD  R26,Y+2
0001ec 81bb      	LDD  R27,Y+2+1
0001ed 9612      	ADIW R26,2
0001ee 940e 0407 	CALL __GETW1P
0001f0 9730      	SBIW R30,0
0001f1 f159      	BREQ _0x2000016
0001f2 81aa      	LDD  R26,Y+2
0001f3 81bb      	LDD  R27,Y+2+1
0001f4 9614      	ADIW R26,4
0001f5 940e 0407 	CALL __GETW1P
0001f7 018f      	MOVW R16,R30
0001f8 9730      	SBIW R30,0
0001f9 f061      	BREQ _0x2000018
                +
0001fa 3002     +CPI R16 , LOW ( 2 )
0001fb e0e0     +LDI R30 , HIGH ( 2 )
0001fc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0001fd f098      	BRLO _0x2000019
0001fe 01f8      	MOVW R30,R16
0001ff 9731      	SBIW R30,1
000200 018f      	MOVW R16,R30
                +
000201 81aa     +LDD R26 , Y + 2
000202 81bb     +LDD R27 , Y + 2 + 1
000203 9614     +ADIW R26 , 4
000204 93ed     +ST X + , R30
000205 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000018:
000206 81aa      	LDD  R26,Y+2
000207 81bb      	LDD  R27,Y+2+1
000208 9612      	ADIW R26,2
000209 91ed      	LD   R30,X+
00020a 91fd      	LD   R31,X+
00020b 9631      	ADIW R30,1
00020c 93fe      	ST   -X,R31
00020d 93ee      	ST   -X,R30
00020e 9731      	SBIW R30,1
00020f 81ac      	LDD  R26,Y+4
000210 83a0      	STD  Z+0,R26
                 _0x2000019:
000211 81aa      	LDD  R26,Y+2
000212 81bb      	LDD  R27,Y+2+1
000213 940e 0407 	CALL __GETW1P
000215 23ff      	TST  R31
000216 f02a      	BRMI _0x200001A
000217 91ed      	LD   R30,X+
000218 91fd      	LD   R31,X+
000219 9631      	ADIW R30,1
00021a 93fe      	ST   -X,R31
00021b 93ee      	ST   -X,R30
                 _0x200001A:
00021c c006      	RJMP _0x200001B
                 _0x2000016:
00021d 81aa      	LDD  R26,Y+2
00021e 81bb      	LDD  R27,Y+2+1
00021f efef      	LDI  R30,LOW(65535)
000220 efff      	LDI  R31,HIGH(65535)
000221 93ed      	ST   X+,R30
000222 93fc      	ST   X,R31
                 _0x200001B:
000223 8119      	LDD  R17,Y+1
000224 8108      	LDD  R16,Y+0
000225 9625      	ADIW R28,5
000226 9508      	RET
                 ; .FEND
                 __print_G100:
                 ; .FSTART __print_G100
000227 93ba      	ST   -Y,R27
000228 93aa      	ST   -Y,R26
000229 9726      	SBIW R28,6
00022a 940e 0414 	CALL __SAVELOCR6
00022c e000      	LDI  R16,0
00022d 85ac      	LDD  R26,Y+12
00022e 85bd      	LDD  R27,Y+12+1
00022f e0e0      	LDI  R30,LOW(0)
000230 e0f0      	LDI  R31,HIGH(0)
000231 93ed      	ST   X+,R30
000232 93fc      	ST   X,R31
                 _0x200001C:
000233 89ea      	LDD  R30,Y+18
000234 89fb      	LDD  R31,Y+18+1
000235 9631      	ADIW R30,1
000236 8bea      	STD  Y+18,R30
000237 8bfb      	STD  Y+18+1,R31
000238 9731      	SBIW R30,1
000239 91e4      	LPM  R30,Z
00023a 2f3e      	MOV  R19,R30
00023b 30e0      	CPI  R30,0
00023c f409      	BRNE PC+2
00023d c115      	RJMP _0x200001E
00023e 2fe0      	MOV  R30,R16
00023f 30e0      	CPI  R30,0
000240 f439      	BRNE _0x2000022
000241 3235      	CPI  R19,37
000242 f411      	BRNE _0x2000023
000243 e001      	LDI  R16,LOW(1)
000244 c002      	RJMP _0x2000024
                 _0x2000023:
000245 940e 03c3 	CALL SUBOPT_0x5
                 _0x2000024:
000247 c10a      	RJMP _0x2000021
                 _0x2000022:
000248 30e1      	CPI  R30,LOW(0x1)
000249 f4a9      	BRNE _0x2000025
00024a 3235      	CPI  R19,37
00024b f419      	BRNE _0x2000026
00024c 940e 03c3 	CALL SUBOPT_0x5
00024e c102      	RJMP _0x20000D2
                 _0x2000026:
00024f e002      	LDI  R16,LOW(2)
000250 e050      	LDI  R21,LOW(0)
000251 e010      	LDI  R17,LOW(0)
000252 323d      	CPI  R19,45
000253 f411      	BRNE _0x2000027
000254 e011      	LDI  R17,LOW(1)
000255 c0fc      	RJMP _0x2000021
                 _0x2000027:
000256 323b      	CPI  R19,43
000257 f411      	BRNE _0x2000028
000258 e25b      	LDI  R21,LOW(43)
000259 c0f8      	RJMP _0x2000021
                 _0x2000028:
00025a 3230      	CPI  R19,32
00025b f411      	BRNE _0x2000029
00025c e250      	LDI  R21,LOW(32)
00025d c0f4      	RJMP _0x2000021
                 _0x2000029:
00025e c002      	RJMP _0x200002A
                 _0x2000025:
00025f 30e2      	CPI  R30,LOW(0x2)
000260 f439      	BRNE _0x200002B
                 _0x200002A:
000261 e040      	LDI  R20,LOW(0)
000262 e003      	LDI  R16,LOW(3)
000263 3330      	CPI  R19,48
000264 f411      	BRNE _0x200002C
000265 6810      	ORI  R17,LOW(128)
000266 c0eb      	RJMP _0x2000021
                 _0x200002C:
000267 c003      	RJMP _0x200002D
                 _0x200002B:
000268 30e3      	CPI  R30,LOW(0x3)
000269 f009      	BREQ PC+2
00026a c0e7      	RJMP _0x2000021
                 _0x200002D:
00026b 3330      	CPI  R19,48
00026c f010      	BRLO _0x2000030
00026d 333a      	CPI  R19,58
00026e f008      	BRLO _0x2000031
                 _0x2000030:
00026f c007      	RJMP _0x200002F
                 _0x2000031:
000270 e0aa      	LDI  R26,LOW(10)
000271 9f4a      	MUL  R20,R26
000272 2d40      	MOV  R20,R0
000273 2fe3      	MOV  R30,R19
000274 53e0      	SUBI R30,LOW(48)
000275 0f4e      	ADD  R20,R30
000276 c0db      	RJMP _0x2000021
                 _0x200002F:
000277 2fe3      	MOV  R30,R19
000278 36e3      	CPI  R30,LOW(0x63)
000279 f449      	BRNE _0x2000035
00027a 940e 03ca 	CALL SUBOPT_0x6
00027c 89e8      	LDD  R30,Y+16
00027d 89f9      	LDD  R31,Y+16+1
00027e 81a4      	LDD  R26,Z+4
00027f 93aa      	ST   -Y,R26
000280 940e 03d0 	CALL SUBOPT_0x7
000282 c0ce      	RJMP _0x2000036
                 _0x2000035:
000283 37e3      	CPI  R30,LOW(0x73)
000284 f441      	BRNE _0x2000038
000285 940e 03ca 	CALL SUBOPT_0x6
000287 940e 03d6 	CALL SUBOPT_0x8
000289 940e 038f 	CALL _strlen
00028b 2f0e      	MOV  R16,R30
00028c c00a      	RJMP _0x2000039
                 _0x2000038:
00028d 37e0      	CPI  R30,LOW(0x70)
00028e f461      	BRNE _0x200003B
00028f 940e 03ca 	CALL SUBOPT_0x6
000291 940e 03d6 	CALL SUBOPT_0x8
000293 940e 039b 	CALL _strlenf
000295 2f0e      	MOV  R16,R30
000296 6018      	ORI  R17,LOW(8)
                 _0x2000039:
000297 6012      	ORI  R17,LOW(2)
000298 771f      	ANDI R17,LOW(127)
000299 e020      	LDI  R18,LOW(0)
00029a c034      	RJMP _0x200003C
                 _0x200003B:
00029b 36e4      	CPI  R30,LOW(0x64)
00029c f011      	BREQ _0x200003F
00029d 36e9      	CPI  R30,LOW(0x69)
00029e f411      	BRNE _0x2000040
                 _0x200003F:
00029f 6014      	ORI  R17,LOW(4)
0002a0 c002      	RJMP _0x2000041
                 _0x2000040:
0002a1 37e5      	CPI  R30,LOW(0x75)
0002a2 f431      	BRNE _0x2000042
                 _0x2000041:
0002a3 eee4      	LDI  R30,LOW(_tbl10_G100*2)
0002a4 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0002a5 83ee      	STD  Y+6,R30
0002a6 83ff      	STD  Y+6+1,R31
0002a7 e005      	LDI  R16,LOW(5)
0002a8 c00c      	RJMP _0x2000043
                 _0x2000042:
0002a9 35e8      	CPI  R30,LOW(0x58)
0002aa f411      	BRNE _0x2000045
0002ab 6018      	ORI  R17,LOW(8)
0002ac c003      	RJMP _0x2000046
                 _0x2000045:
0002ad 37e8      	CPI  R30,LOW(0x78)
0002ae f009      	BREQ PC+2
0002af c0a1      	RJMP _0x2000077
                 _0x2000046:
0002b0 eeee      	LDI  R30,LOW(_tbl16_G100*2)
0002b1 e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
0002b2 83ee      	STD  Y+6,R30
0002b3 83ff      	STD  Y+6+1,R31
0002b4 e004      	LDI  R16,LOW(4)
                 _0x2000043:
0002b5 ff12      	SBRS R17,2
0002b6 c014      	RJMP _0x2000048
0002b7 940e 03ca 	CALL SUBOPT_0x6
0002b9 940e 03e0 	CALL SUBOPT_0x9
0002bb 85ab      	LDD  R26,Y+11
0002bc 23aa      	TST  R26
0002bd f43a      	BRPL _0x2000049
0002be 85ea      	LDD  R30,Y+10
0002bf 85fb      	LDD  R31,Y+10+1
0002c0 940e 03fd 	CALL __ANEGW1
0002c2 87ea      	STD  Y+10,R30
0002c3 87fb      	STD  Y+10+1,R31
0002c4 e25d      	LDI  R21,LOW(45)
                 _0x2000049:
0002c5 3050      	CPI  R21,0
0002c6 f011      	BREQ _0x200004A
0002c7 5f0f      	SUBI R16,-LOW(1)
0002c8 c001      	RJMP _0x200004B
                 _0x200004A:
0002c9 7f1b      	ANDI R17,LOW(251)
                 _0x200004B:
0002ca c004      	RJMP _0x200004C
                 _0x2000048:
0002cb 940e 03ca 	CALL SUBOPT_0x6
0002cd 940e 03e0 	CALL SUBOPT_0x9
                 _0x200004C:
                 _0x200003C:
0002cf fd10      	SBRC R17,0
0002d0 c011      	RJMP _0x200004D
                 _0x200004E:
0002d1 1704      	CP   R16,R20
0002d2 f478      	BRSH _0x2000050
0002d3 ff17      	SBRS R17,7
0002d4 c008      	RJMP _0x2000051
0002d5 ff12      	SBRS R17,2
0002d6 c004      	RJMP _0x2000052
0002d7 7f1b      	ANDI R17,LOW(251)
0002d8 2f35      	MOV  R19,R21
0002d9 5001      	SUBI R16,LOW(1)
0002da c001      	RJMP _0x2000053
                 _0x2000052:
0002db e330      	LDI  R19,LOW(48)
                 _0x2000053:
0002dc c001      	RJMP _0x2000054
                 _0x2000051:
0002dd e230      	LDI  R19,LOW(32)
                 _0x2000054:
0002de 940e 03c3 	CALL SUBOPT_0x5
0002e0 5041      	SUBI R20,LOW(1)
0002e1 cfef      	RJMP _0x200004E
                 _0x2000050:
                 _0x200004D:
0002e2 2f20      	MOV  R18,R16
0002e3 ff11      	SBRS R17,1
0002e4 c017      	RJMP _0x2000055
                 _0x2000056:
0002e5 3020      	CPI  R18,0
0002e6 f0a1      	BREQ _0x2000058
0002e7 ff13      	SBRS R17,3
0002e8 c006      	RJMP _0x2000059
0002e9 81ee      	LDD  R30,Y+6
0002ea 81ff      	LDD  R31,Y+6+1
0002eb 9135      	LPM  R19,Z+
0002ec 83ee      	STD  Y+6,R30
0002ed 83ff      	STD  Y+6+1,R31
0002ee c005      	RJMP _0x200005A
                 _0x2000059:
0002ef 81ae      	LDD  R26,Y+6
0002f0 81bf      	LDD  R27,Y+6+1
0002f1 913d      	LD   R19,X+
0002f2 83ae      	STD  Y+6,R26
0002f3 83bf      	STD  Y+6+1,R27
                 _0x200005A:
0002f4 940e 03c3 	CALL SUBOPT_0x5
0002f6 3040      	CPI  R20,0
0002f7 f009      	BREQ _0x200005B
0002f8 5041      	SUBI R20,LOW(1)
                 _0x200005B:
0002f9 5021      	SUBI R18,LOW(1)
0002fa cfea      	RJMP _0x2000056
                 _0x2000058:
0002fb c04b      	RJMP _0x200005C
                 _0x2000055:
                 _0x200005E:
0002fc e330      	LDI  R19,LOW(48)
0002fd 81ee      	LDD  R30,Y+6
0002fe 81ff      	LDD  R31,Y+6+1
0002ff 940e 040b 	CALL __GETW1PF
000301 87e8      	STD  Y+8,R30
000302 87f9      	STD  Y+8+1,R31
000303 81ee      	LDD  R30,Y+6
000304 81ff      	LDD  R31,Y+6+1
000305 9632      	ADIW R30,2
000306 83ee      	STD  Y+6,R30
000307 83ff      	STD  Y+6+1,R31
                 _0x2000060:
000308 85e8      	LDD  R30,Y+8
000309 85f9      	LDD  R31,Y+8+1
00030a 85aa      	LDD  R26,Y+10
00030b 85bb      	LDD  R27,Y+10+1
00030c 17ae      	CP   R26,R30
00030d 07bf      	CPC  R27,R31
00030e f050      	BRLO _0x2000062
00030f 5f3f      	SUBI R19,-LOW(1)
000310 85a8      	LDD  R26,Y+8
000311 85b9      	LDD  R27,Y+8+1
000312 85ea      	LDD  R30,Y+10
000313 85fb      	LDD  R31,Y+10+1
000314 1bea      	SUB  R30,R26
000315 0bfb      	SBC  R31,R27
000316 87ea      	STD  Y+10,R30
000317 87fb      	STD  Y+10+1,R31
000318 cfef      	RJMP _0x2000060
                 _0x2000062:
000319 333a      	CPI  R19,58
00031a f028      	BRLO _0x2000063
00031b ff13      	SBRS R17,3
00031c c002      	RJMP _0x2000064
00031d 5f39      	SUBI R19,-LOW(7)
00031e c001      	RJMP _0x2000065
                 _0x2000064:
00031f 5d39      	SUBI R19,-LOW(39)
                 _0x2000065:
                 _0x2000063:
000320 fd14      	SBRC R17,4
000321 c01a      	RJMP _0x2000067
000322 3331      	CPI  R19,49
000323 f420      	BRSH _0x2000069
000324 85a8      	LDD  R26,Y+8
000325 85b9      	LDD  R27,Y+8+1
000326 9711      	SBIW R26,1
000327 f409      	BRNE _0x2000068
                 _0x2000069:
000328 c009      	RJMP _0x20000D3
                 _0x2000068:
000329 1742      	CP   R20,R18
00032a f010      	BRLO _0x200006D
00032b ff10      	SBRS R17,0
00032c c001      	RJMP _0x200006E
                 _0x200006D:
00032d c013      	RJMP _0x200006C
                 _0x200006E:
00032e e230      	LDI  R19,LOW(32)
00032f ff17      	SBRS R17,7
000330 c00b      	RJMP _0x200006F
000331 e330      	LDI  R19,LOW(48)
                 _0x20000D3:
000332 6110      	ORI  R17,LOW(16)
000333 ff12      	SBRS R17,2
000334 c007      	RJMP _0x2000070
000335 7f1b      	ANDI R17,LOW(251)
000336 935a      	ST   -Y,R21
000337 940e 03d0 	CALL SUBOPT_0x7
000339 3040      	CPI  R20,0
00033a f009      	BREQ _0x2000071
00033b 5041      	SUBI R20,LOW(1)
                 _0x2000071:
                 _0x2000070:
                 _0x200006F:
                 _0x2000067:
00033c 940e 03c3 	CALL SUBOPT_0x5
00033e 3040      	CPI  R20,0
00033f f009      	BREQ _0x2000072
000340 5041      	SUBI R20,LOW(1)
                 _0x2000072:
                 _0x200006C:
000341 5021      	SUBI R18,LOW(1)
000342 85a8      	LDD  R26,Y+8
000343 85b9      	LDD  R27,Y+8+1
000344 9712      	SBIW R26,2
000345 f008      	BRLO _0x200005F
000346 cfb5      	RJMP _0x200005E
                 _0x200005F:
                 _0x200005C:
000347 ff10      	SBRS R17,0
000348 c008      	RJMP _0x2000073
                 _0x2000074:
000349 3040      	CPI  R20,0
00034a f031      	BREQ _0x2000076
00034b 5041      	SUBI R20,LOW(1)
00034c e2e0      	LDI  R30,LOW(32)
00034d 93ea      	ST   -Y,R30
00034e 940e 03d0 	CALL SUBOPT_0x7
000350 cff8      	RJMP _0x2000074
                 _0x2000076:
                 _0x2000073:
                 _0x2000077:
                 _0x2000036:
                 _0x20000D2:
000351 e000      	LDI  R16,LOW(0)
                 _0x2000021:
000352 cee0      	RJMP _0x200001C
                 _0x200001E:
000353 85ac      	LDD  R26,Y+12
000354 85bd      	LDD  R27,Y+12+1
000355 940e 0407 	CALL __GETW1P
000357 940e 041b 	CALL __LOADLOCR6
000359 9664      	ADIW R28,20
00035a 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
00035b 92ff      	PUSH R15
00035c 2ef8      	MOV  R15,R24
00035d 9726      	SBIW R28,6
00035e 940e 0416 	CALL __SAVELOCR4
000360 940e 03e8 	CALL SUBOPT_0xA
000362 9730      	SBIW R30,0
000363 f419      	BRNE _0x2000078
000364 efef      	LDI  R30,LOW(65535)
000365 efff      	LDI  R31,HIGH(65535)
000366 c023      	RJMP _0x2060001
                 _0x2000078:
000367 01de      	MOVW R26,R28
000368 9616      	ADIW R26,6
000369 940e 03f9 	CALL __ADDW2R15
00036b 018d      	MOVW R16,R26
00036c 940e 03e8 	CALL SUBOPT_0xA
00036e 83ee      	STD  Y+6,R30
00036f 83ff      	STD  Y+6+1,R31
000370 e0e0      	LDI  R30,LOW(0)
000371 87e8      	STD  Y+8,R30
000372 87e9      	STD  Y+8+1,R30
000373 01de      	MOVW R26,R28
000374 961a      	ADIW R26,10
000375 940e 03f9 	CALL __ADDW2R15
000377 940e 0407 	CALL __GETW1P
000379 93fa      	ST   -Y,R31
00037a 93ea      	ST   -Y,R30
00037b 931a      	ST   -Y,R17
00037c 930a      	ST   -Y,R16
00037d eee7      	LDI  R30,LOW(_put_buff_G100)
00037e e0f1      	LDI  R31,HIGH(_put_buff_G100)
00037f 93fa      	ST   -Y,R31
000380 93ea      	ST   -Y,R30
000381 01de      	MOVW R26,R28
000382 961a      	ADIW R26,10
000383 dea3      	RCALL __print_G100
000384 019f      	MOVW R18,R30
000385 81ae      	LDD  R26,Y+6
000386 81bf      	LDD  R27,Y+6+1
000387 e0e0      	LDI  R30,LOW(0)
000388 93ec      	ST   X,R30
000389 01f9      	MOVW R30,R18
                 _0x2060001:
00038a 940e 041d 	CALL __LOADLOCR4
00038c 962a      	ADIW R28,10
00038d 90ff      	POP  R15
00038e 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
                 ; .FSTART _strlen
00038f 93ba      	ST   -Y,R27
000390 93aa      	ST   -Y,R26
000391 91a9          ld   r26,y+
000392 91b9          ld   r27,y+
000393 27ee          clr  r30
000394 27ff          clr  r31
                 strlen0:
000395 916d          ld   r22,x+
000396 2366          tst  r22
000397 f011          breq strlen1
000398 9631          adiw r30,1
000399 cffb          rjmp strlen0
                 strlen1:
00039a 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
00039b 93ba      	ST   -Y,R27
00039c 93aa      	ST   -Y,R26
00039d 27aa          clr  r26
00039e 27bb          clr  r27
00039f 91e9          ld   r30,y+
0003a0 91f9          ld   r31,y+
                 strlenf0:
0003a1 9005      	lpm  r0,z+
0003a2 2000          tst  r0
0003a3 f011          breq strlenf1
0003a4 9611          adiw r26,1
0003a5 cffb          rjmp strlenf0
                 strlenf1:
0003a6 01fd          movw r30,r26
0003a7 9508          ret
                 ; .FEND
                 
                 	.DSEG
                 _cursor:
000600           	.BYTE 0x1
                 _i:
000601           	.BYTE 0x1
                 _H:
000602           	.BYTE 0x1
                 _M:
000603           	.BYTE 0x1
                 _S:
000604           	.BYTE 0x1
                 _Hora:
000605           	.BYTE 0x8
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
0003a8 e0a2      	LDI  R26,LOW(2)
0003a9 e0b0      	LDI  R27,0
0003aa 940c 03ef 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1:
0003ac 940e 00db 	CALL _SendDataBitsLCD
0003ae 940c 00d8 	JMP  _PulseEn
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
0003b0 81e9      	LDD  R30,Y+1
0003b1 7fe0      	ANDI R30,LOW(0xF0)
0003b2 2f0e      	MOV  R16,R30
0003b3 9502      	SWAP R16
0003b4 700f      	ANDI R16,0xF
0003b5 2fa0      	MOV  R26,R16
0003b6 cff5      	RJMP SUBOPT_0x1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3:
0003b7 81e9      	LDD  R30,Y+1
0003b8 70ef      	ANDI R30,LOW(0xF)
0003b9 2f0e      	MOV  R16,R30
0003ba 2fa0      	MOV  R26,R16
0003bb 940e 00db 	CALL _SendDataBitsLCD
0003bd cfea      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
0003be 940e 0401 	CALL __CBD1
0003c0 940e 040f 	CALL __PUTPARD1
0003c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x5:
0003c3 933a      	ST   -Y,R19
0003c4 85ad      	LDD  R26,Y+13
0003c5 85be      	LDD  R27,Y+13+1
0003c6 85ef      	LDD  R30,Y+15
0003c7 89f8      	LDD  R31,Y+15+1
0003c8 9509      	ICALL
0003c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6:
0003ca 89e8      	LDD  R30,Y+16
0003cb 89f9      	LDD  R31,Y+16+1
0003cc 9734      	SBIW R30,4
0003cd 8be8      	STD  Y+16,R30
0003ce 8bf9      	STD  Y+16+1,R31
0003cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x7:
0003d0 85ad      	LDD  R26,Y+13
0003d1 85be      	LDD  R27,Y+13+1
0003d2 85ef      	LDD  R30,Y+15
0003d3 89f8      	LDD  R31,Y+15+1
0003d4 9509      	ICALL
0003d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x8:
0003d6 89a8      	LDD  R26,Y+16
0003d7 89b9      	LDD  R27,Y+16+1
0003d8 9614      	ADIW R26,4
0003d9 940e 0407 	CALL __GETW1P
0003db 83ee      	STD  Y+6,R30
0003dc 83ff      	STD  Y+6+1,R31
0003dd 81ae      	LDD  R26,Y+6
0003de 81bf      	LDD  R27,Y+6+1
0003df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x9:
0003e0 89a8      	LDD  R26,Y+16
0003e1 89b9      	LDD  R27,Y+16+1
0003e2 9614      	ADIW R26,4
0003e3 940e 0407 	CALL __GETW1P
0003e5 87ea      	STD  Y+10,R30
0003e6 87fb      	STD  Y+10+1,R31
0003e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
0003e8 01de      	MOVW R26,R28
0003e9 961c      	ADIW R26,12
0003ea 940e 03f9 	CALL __ADDW2R15
0003ec 940e 0407 	CALL __GETW1P
0003ee 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
0003ef 9610      	adiw r26,0
0003f0 f039      	breq __delay_ms1
                 __delay_ms0:
                +
0003f1 ef8a     +LDI R24 , LOW ( 0xFA )
0003f2 e090     +LDI R25 , HIGH ( 0xFA )
                +__DELAY_USW_LOOP :
0003f3 9701     +SBIW R24 , 1
0003f4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0xFA
0003f5 95a8      	wdr
0003f6 9711      	sbiw r26,1
0003f7 f7c9      	brne __delay_ms0
                 __delay_ms1:
0003f8 9508      	ret
                 
                 __ADDW2R15:
0003f9 2400      	CLR  R0
0003fa 0daf      	ADD  R26,R15
0003fb 1db0      	ADC  R27,R0
0003fc 9508      	RET
                 
                 __ANEGW1:
0003fd 95f1      	NEG  R31
0003fe 95e1      	NEG  R30
0003ff 40f0      	SBCI R31,0
000400 9508      	RET
                 
                 __CBD1:
000401 2ffe      	MOV  R31,R30
000402 0fff      	ADD  R31,R31
000403 0bff      	SBC  R31,R31
000404 2f6f      	MOV  R22,R31
000405 2f7f      	MOV  R23,R31
000406 9508      	RET
                 
                 __GETW1P:
000407 91ed      	LD   R30,X+
000408 91fc      	LD   R31,X
000409 9711      	SBIW R26,1
00040a 9508      	RET
                 
                 __GETW1PF:
00040b 9005      	LPM  R0,Z+
00040c 91f4      	LPM  R31,Z
00040d 2de0      	MOV  R30,R0
00040e 9508      	RET
                 
                 __PUTPARD1:
00040f 937a      	ST   -Y,R23
000410 936a      	ST   -Y,R22
000411 93fa      	ST   -Y,R31
000412 93ea      	ST   -Y,R30
000413 9508      	RET
                 
                 __SAVELOCR6:
000414 935a      	ST   -Y,R21
                 __SAVELOCR5:
000415 934a      	ST   -Y,R20
                 __SAVELOCR4:
000416 933a      	ST   -Y,R19
                 __SAVELOCR3:
000417 932a      	ST   -Y,R18
                 __SAVELOCR2:
000418 931a      	ST   -Y,R17
000419 930a      	ST   -Y,R16
00041a 9508      	RET
                 
                 __LOADLOCR6:
00041b 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00041c 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00041d 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00041e 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00041f 8119      	LDD  R17,Y+1
000420 8108      	LD   R16,Y
000421 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000422 0fac      	ADD  R26,R28
000423 1fbd      	ADC  R27,R29
                 __INITLOC0:
000424 9005      	LPM  R0,Z+
000425 920d      	ST   X+,R0
000426 958a      	DEC  R24
000427 f7e1      	BRNE __INITLOC0
000428 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :   9 r1 :   0 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  46 r17:  30 r18:  10 r19:  27 r20:  17 r21:   9 r22:   4 r23:   2 
r24:  12 r25:   2 r26: 110 r27:  42 r28:  18 r29:   2 r30: 204 r31:  70 
x  :  25 y  : 166 z  :   8 
Registers used: 21 out of 35 (60.0%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   5 add   :   7 
adiw  :  26 and   :   0 andi  :  11 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  18 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   7 
brlt  :   0 brmi  :   1 brne  :  36 brpl  :   1 brsh  :   3 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  56 
cbi   :   6 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   8 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   3 cpc   :   5 cpi   :  43 cpse  :   0 dec   :   2 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   2 ijmp  :   0 in    :   0 inc   :   0 jmp   :  60 
ld    :  21 ldd   :  84 ldi   :  94 lds   :  20 lpm   :   8 lsl   :   0 
lsr   :   0 mov   :  20 movw  :  12 mul   :   1 muls  :   0 mulsu :   0 
neg   :   2 nop   :   0 or    :   0 ori   :   6 out   :   9 pop   :   1 
push  :   1 rcall :   9 ret   :  27 reti  :   0 rjmp  :  75 rol   :   0 
ror   :   0 sbc   :   2 sbci  :   1 sbi   :  13 sbic  :   5 sbis  :   1 
sbiw  :  17 sbr   :   0 sbrc  :   2 sbrs  :  10 sec   :   0 seh   :   0 
sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   0 sev   :   0 
sez   :   0 sleep :   0 spm   :   0 st    :  59 std   :  29 sts   :  22 
sub   :   1 subi  :  27 swap  :   1 tst   :   4 wdr   :   1 
Instructions used: 52 out of 119 (43.7%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000852   2084     46   2130  262144   0.8%
[.dseg] 0x000200 0x00060d      0     13     13    8192   0.2%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 1 warnings
